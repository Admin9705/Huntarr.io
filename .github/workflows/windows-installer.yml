name: Windows Installer Build

on:
  push:
    tags:
      - "*"  # This will trigger on any tag push
    branches:
      - "win-*"  # Only trigger on branches starting with 'win-'

permissions:
  contents: write
  packages: read
  
jobs:
  build-windows-installer:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller==5.13.0
          pip install pywin32==306
      
      - name: Get version info
        id: version
        run: |
          if ("${{ github.ref }}" -like "refs/tags/*") {
            $VERSION = "${{ github.ref }}" -replace "refs/tags/", ""
            echo "VERSION=$VERSION" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          } else {
            $COMMIT_SHA = "${{ github.sha }}".Substring(0, 7)
            echo "VERSION=dev-$COMMIT_SHA" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
          }
      
      - name: Create required directories
        run: |
          mkdir -p config/logs
          mkdir -p assets
          # List directories to verify
          dir
      
      - name: Copy distribution files
        run: |
          # Copy spec file from distribution directory to root
          Copy-Item -Path "distribution/windows/huntarr.spec" -Destination "."
          # Copy Inno Setup installer script
          Copy-Item -Path "distribution/windows/installer/huntarr_installer.iss" -Destination "."
          # Create resources directory in case needed
          mkdir -p dist/Huntarr/resources
      
      - name: Build with PyInstaller
        run: |
          # Use the dedicated build script from the distribution directory
          python distribution/windows/main.py --exe-only
      
      - name: Download Inno Setup
        run: |
          $innoSetupUrl = "https://files.jrsoftware.org/is/6/innosetup-6.2.2.exe"
          $innoSetupInstaller = "innosetup-installer.exe"
          Invoke-WebRequest -Uri $innoSetupUrl -OutFile $innoSetupInstaller
          Start-Process -FilePath $innoSetupInstaller -ArgumentList "/VERYSILENT /SUPPRESSMSGBOXES /NORESTART /SP-" -Wait
      
      - name: Prepare for installer build
        run: |
          # Copy helper files to the distribution
          mkdir -p dist/Huntarr/resources
          Copy-Item -Path "distribution/windows/resources/*" -Destination "dist/Huntarr/resources/" -Recurse
          # Copy scripts
          mkdir -p dist/Huntarr/scripts
          Copy-Item -Path "distribution/windows/scripts/*" -Destination "dist/Huntarr/scripts/" -Recurse
          # Create installer directory
          mkdir -p installer
      
      - name: Build installer with Inno Setup
        run: |
          $env:PATH += ";C:\Program Files (x86)\Inno Setup 6"
          mkdir -p installer
          # Use the dedicated build script for installer creation
          python distribution/windows/main.py --installer-only
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./installer/Huntarr_Setup.exe
          name: Huntarr ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: false
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload installer as artifact
        uses: actions/upload-artifact@v4
        with:
          name: Huntarr_Windows_Installer
          path: ./installer/Huntarr_Setup.exe
