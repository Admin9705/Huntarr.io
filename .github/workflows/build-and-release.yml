# GitHub Actions Workflow for Huntarr.io: Build Docker Image and Windows Installer

name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0, v0.5.2, etc.

jobs:
  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GitHub Packages (GHCR)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/huntarr # Use repository_owner for username/org
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-windows-installer:
    name: Build Windows Installer
    needs: build-docker-image # Run after Docker image is built
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the version from the tag
        id: get_version
        run: echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> $env:GITHUB_ENV
        shell: bash

      - name: Set Docker image name for NSIS
        id: set_image_name
        # Ensure this matches the image name used in the 'build-docker-image' job
        run: echo "DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/huntarr:${{ env.APP_VERSION }}" >> $env:GITHUB_ENV 
        shell: bash
        
      - name: Debug: Print versions
        run: |
          echo "App Version for NSIS: ${{ env.APP_VERSION }}"
          echo "Docker Image for NSIS: ${{ env.DOCKER_IMAGE }}"
        shell: bash

      - name: Install NSIS
        run: choco install nsis --version=3.09 -y # Pinning version for stability, check for latest if needed
        shell: powershell

      - name: Update installer.nsi with correct version and image name
        run: |
          (Get-Content installer.nsi) | 
          ForEach-Object { $_ -replace '^!define APP_VERSION .*', '!define APP_VERSION "${{ env.APP_VERSION }}"' } | 
          ForEach-Object { $_ -replace '^!define DOCKER_IMAGE_NAME .*', '!define DOCKER_IMAGE_NAME "${{ env.DOCKER_IMAGE }}"' } | 
          Set-Content installer.nsi
        shell: powershell

      - name: Compile NSIS Installer
        run: makensis.exe installer.nsi
        shell: cmd
        working-directory: ${{ github.workspace }} # Ensure it runs where installer.nsi is

      - name: Upload Installer Artifact
        uses: actions/upload-artifact@v4
        with:
          name: huntarr-installer-${{ env.APP_VERSION }}
          path: Huntarr-Installer-${{ env.APP_VERSION }}.exe # NSIS OutFile is Huntarr-Installer-${APP_VERSION}.exe
  
  create-release:
    name: Create GitHub Release
    needs: [build-docker-image, build-windows-installer]
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create releases

    steps:
      - name: Get the version from the tag
        id: get_version
        run: echo "APP_VERSION=${GITHUB_REF#refs/tags/}" >> $env:GITHUB_ENV
        shell: bash

      - name: Download installer artifact
        uses: actions/download-artifact@v4
        with:
          name: huntarr-installer-${{ env.APP_VERSION }}
      
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          files: Huntarr-Installer-${{ env.APP_VERSION }}.exe
          tag_name: ${{ env.APP_VERSION }}
          name: Release ${{ env.APP_VERSION }}
          body: "Huntarr.io ${{ env.APP_VERSION }} release. Installer for Windows."
          draft: false
          prerelease: contains(env.APP_VERSION, '-beta') || contains(env.APP_VERSION, '-alpha')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
