name: Deploy Huntarr Documentation
# Updated workflow for docs deployment

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Prepare Documentation
        run: |
          mkdir -p docs/assets/{css,img,js,logo}
          
          # Copy assets
          [ -d frontend/static/css ] && cp -r frontend/static/css/* docs/assets/css/ || true
          [ -d frontend/static/js ] && cp -r frontend/static/js/* docs/assets/js/ || true
          [ -d frontend/static/img ] && cp -r frontend/static/img/* docs/assets/img/ || true
          [ -d assets/logo ] && cp -r assets/logo/* docs/assets/logo/ || true
          
          # Create .nojekyll file
          touch docs/.nojekyll
          
          # Process nested docs if they exist
          if [ -d "docs/docs" ]; then
            find docs/docs -type f -exec cp {} docs/ \;
            for dir in docs/docs/*/; do
              if [ -d "$dir" ]; then
                dirname=$(basename "$dir")
                mkdir -p "docs/$dirname"
                cp -r "$dir"* "docs/$dirname/" || true
              fi
            done
          fi
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        if: github.event_name != 'pull_request' 